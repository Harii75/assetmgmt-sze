worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        return 301 https://$host$request_uri;
    }

    # Redirect direct access to 5173 (Vite dev server)
    server {
        listen 5173;
        listen [::]:5173;
        server_name 192.168.101.60;

        return 301 https://192.168.101.60;
    }

    server {
        listen 443 ssl;
 	server_name 192.168.101.60;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # Frontend (React app running on Vite port 5173)
        location / {
            proxy_pass http://192.168.101.60:5173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # WebSockets support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            # Prevent infinite redirect loops
            error_page 404 = /index.html;
        }

        # Backend API (Node.js running on port 5000)
        location /api/ {
            proxy_pass http://192.168.101.60:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Allow CORS
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";

            if ($request_method = OPTIONS) {
                return 204;
            }

	}

        location /uploads/ {
	    proxy_pass http://192.168.101.60:5000;
	}
    }
    server {
        listen 8000 ssl;
        server_name 192.168.101.60;

        ssl_certificate /etc/nginx/ssl/snipeit.crt;
        ssl_certificate_key /etc/nginx/ssl/snipeit.key;

        location / {
            proxy_pass http://192.168.101.60:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    
}

